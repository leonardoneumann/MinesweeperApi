swagger: '2.0'
info:
  title: Minesweeper
  description: Backend API for a minesweeper game app
  version: '1.0'
host: lknminesweeper.herokuapp.com
schemes:
  - https
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    in: header
    name: Authorization
security:
  - api_key: []
paths:
  /games/:
    get:
      operationId: listGames
      description: Lists all games
      parameters: []
      responses:
        '200':
          description: 'Game Object array'
          schema:
            type: array
            items:
              $ref: '#/definitions/Game'
      tags:
        - games
    put:
      operationId: newGame
      description: Creates a new Game
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Game'
      responses:
        '201':
          description: 'New Game Object'
          schema:
            $ref: '#/definitions/Game'
      tags:
        - games
    parameters: []
  '/games/{id}/':
    get:
      operationId: getGame
      description: Returns an existing game
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Game'
      tags:
        - games
    parameters:
      - name: id
        in: path
        description: A uuid/guid value identifying this game.
        required: true
        type: string
  '/games/{id}/play':
    post:
      operationId: Play
      description: Makes a play on a given cell
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CellAction'
      responses:
        '200':
          description: 'Updated Game Object'
          schema:
            $ref: '#/definitions/Game'
      tags:
        - games
    parameters:
      - name: id
        in: path
        description: A uuid/guid value identifying this game.
        required: true
        type: string
  /login/:
    post:
      operationId: authenticate
      description: >-
        Takes a set of user credentials and returns an access and refresh JSON
        web

        token pair to prove the authentication of those credentials.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoginData'
      responses:
        201:
          description: 'Login Success'
          schema:
            $ref: '#/definitions/AuthToken'
        401:
          description: 'Login Failed'
      tags:
        - login
    parameters: []
  /refresh/:
    post:
      operationId: refreshAuthToken
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthToken'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/AuthToken'
      tags:
        - refresh
    parameters: []
  /users/:
    post:
      operationId: createUser
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/User'
        '400':
          description: 'Invalid user'
      tags:
        - users
    parameters: []

definitions:
  CellAction:
    required:
      - id
      - action
    type: object
    properties:
      id:
        title: ID
        type: integer
      action:
        title: Action Type
        type: integer
        enum: [0, 1, 2, 3]
        description: >
          Cell State:
             * `0` - Reveal
             * `1` - Flag
             * `2` - Question Mark
  Cell:
    required:
      - row
      - column
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      row:
        title: Row
        type: integer
        maximum: 1024
        minimum: 10
      col:
        title: Column
        type: integer
        maximum: 1024
        minimum: 10
      nearMines:
        title: Number of surrounding Mines
        type: integer
      state:
        title: State
        type: integer
        enum: [0, 1, 2, 3]
        description: >
          Cell State:
             * `0` - Hidden
             * `1` - Has Mine
             * `2` - Flag
             * `3` - Question Mark
  Game:
    type: object
    properties:
      id:
        title: ID
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 200
        minLength: 5
      state:
        title: State
        type: integer
        enum: [0, 1, 2, 3]
        description: >
          Cell State:
             * `0` - New
             * `1` - Playing
             * `2` - Won
             * `3` - Lost
        readOnly: true
      started:
        title: Started DateTime
        type: string
        format: date-time
        readOnly: true
      finished:
        title: Finished DateTime
        type: string
        format: date-time
        readOnly: true
      rows:
        title: Number of Rows
        type: integer
        maximum: 1024
        minimum: 10
      cols:
        title: Number of Columns
        type: integer
        maximum: 1024
        minimum: 10
      mines:
        title: Mines
        type: integer
        maximum: 2147483647
        minimum: -2147483648
      cells:
        type: array
        items:
          $ref: '#/definitions/Cell'
        readOnly: true
  LoginData:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 8
      password:
        title: Password
        type: string
        minLength: 8
  AuthToken:
    required:
      - refresh
    type: object
    properties:
      token:
        title: Authentication Token
        type: string
        format: uuid
      timestamp:
        title: Creation Datetime
        type: string
        format: date-time
  User:
    required:
      - username
      - email
      - password
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        type: string
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 8